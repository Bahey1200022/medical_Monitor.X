

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 05 11:19:16 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Generated 12/10/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F46K20 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
    69   000000                     
    70 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
    71   000000                     
    72 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
    73   000000                     _ADCON0	set	4034
    74   000000                     _ADRESL	set	4035
    75                           
    76                           	psect	nvCOMRAM
    77   00000C                     __pnvCOMRAM:
    78                           	callstack 0
    79   00000C                     _INT2_InterruptHandler:
    80                           	callstack 0
    81   00000C                     	ds	2
    82   00000E                     _INT1_InterruptHandler:
    83                           	callstack 0
    84   00000E                     	ds	2
    85   000010                     _INT0_InterruptHandler:
    86                           	callstack 0
    87   000010                     	ds	2
    88   000000                     _LATDbits	set	3980
    89   000000                     _TRISDbits	set	3989
    90   000000                     _SSPSTATbits	set	4039
    91   000000                     _TRISCbits	set	3988
    92   000000                     _ADCON0bits	set	4034
    93   000000                     _WPUB	set	3964
    94   000000                     _ANSELH	set	3967
    95   000000                     _LATA	set	3977
    96   000000                     _PIR1bits	set	3998
    97   000000                     _ADCON2	set	4032
    98   000000                     _ADCON1	set	4033
    99   000000                     _SSPCON1	set	4038
   100   000000                     _RCONbits	set	4048
   101   000000                     _INTCONbits	set	4082
   102   000000                     _ADRESH	set	4036
   103   000000                     _TRISA	set	3986
   104   000000                     _LATE	set	3981
   105   000000                     _LATD	set	3980
   106   000000                     _LATC	set	3979
   107   000000                     _LATB	set	3978
   108   000000                     _OSCTUNE	set	3995
   109   000000                     _TRISE	set	3990
   110   000000                     _TRISD	set	3989
   111   000000                     _TRISC	set	3988
   112   000000                     _TRISB	set	3987
   113   000000                     _IOCB	set	3965
   114   000000                     _OSCCON	set	4051
   115   000000                     _INTCON3bits	set	4080
   116   000000                     _INTCON2bits	set	4081
   117   000000                     _SSPBUF	set	4041
   118   000000                     _SSPSTAT	set	4039
   119                           
   120                           	psect	smallconst
   121   001000                     __psmallconst:
   122                           	callstack 0
   123   001000  00                 	db	0
   124   001001                     STR_1:
   125   001001  48                 	db	72	;'H'
   126   001002  65                 	db	101	;'e'
   127   001003  6C                 	db	108	;'l'
   128   001004  6C                 	db	108	;'l'
   129   001005  6F                 	db	111	;'o'
   130   001006  2C                 	db	44
   131   001007  20                 	db	32
   132   001008  57                 	db	87	;'W'
   133   001009  6F                 	db	111	;'o'
   134   00100A  72                 	db	114	;'r'
   135   00100B  6C                 	db	108	;'l'
   136   00100C  64                 	db	100	;'d'
   137   00100D  21                 	db	33
   138   00100E  00                 	db	0
   139   00100F  00                 	db	0	; dummy byte at the end
   140   000000                     
   141                           ; #config settings
   142                           
   143                           	psect	cinit
   144   001254                     __pcinit:
   145                           	callstack 0
   146   001254                     start_initialization:
   147                           	callstack 0
   148   001254                     __initialization:
   149                           	callstack 0
   150   001254                     end_of_initialization:
   151                           	callstack 0
   152   001254                     __end_of__initialization:
   153                           	callstack 0
   154   001254  0100               	movlb	0
   155   001256  EFB0  F008         	goto	_main	;jump to C main() function
   156                           
   157                           	psect	cstackCOMRAM
   158   000001                     __pcstackCOMRAM:
   159                           	callstack 0
   160   000001                     SPI_Write@data:
   161                           	callstack 0
   162   000001                     INT0_SetInterruptHandler@InterruptHandler:
   163                           	callstack 0
   164   000001                     INT1_SetInterruptHandler@InterruptHandler:
   165                           	callstack 0
   166   000001                     INT2_SetInterruptHandler@InterruptHandler:
   167                           	callstack 0
   168                           
   169                           ; 2 bytes @ 0x0
   170   000001                     	ds	1
   171   000002                     MCP23S09_Write@data:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0x1
   175   000002                     	ds	1
   176   000003                     MCP23S09_Write@reg:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x2
   180   000003                     	ds	1
   181   000004                     LCD_PulseEnable@data:
   182                           	callstack 0
   183                           
   184                           ; 1 bytes @ 0x3
   185   000004                     	ds	1
   186   000005                     LCD_Write4Bits@data:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x4
   190   000005                     	ds	1
   191   000006                     LCD_Send@mode:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x5
   195   000006                     	ds	1
   196   000007                     LCD_Send@high_nibble:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0x6
   200   000007                     	ds	1
   201   000008                     LCD_Send@low_nibble:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x7
   205   000008                     	ds	1
   206   000009                     LCD_Send@data:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x8
   210   000009                     	ds	1
   211   00000A                     LCD_Command@cmd:
   212                           	callstack 0
   213   00000A                     LCD_WriteChar@data:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x9
   217   00000A                     	ds	1
   218   00000B                     ??_LCD_Init:
   219   00000B                     LCD_WriteString@str:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0xA
   223   00000B                     	ds	1
   224   00000C                     
   225                           ; 1 bytes @ 0xB
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 41 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  2  178[None  ] int 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   249 ;;Total ram usage:        0 bytes
   250 ;; Hardware stack levels required when called: 7
   251 ;; This function calls:
   252 ;;		_LCD_Init
   253 ;;		_LCD_WriteString
   254 ;;		_SPI_Init
   255 ;;		_SYSTEM_Initialize
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text0
   262   001160                     __ptext0:
   263                           	callstack 0
   264   001160                     _main:
   265                           	callstack 24
   266   001160                     
   267                           ;main.c: 43:     SYSTEM_Initialize();
   268   001160  ECF8  F008         	call	_SYSTEM_Initialize	;wreg free
   269   001164                     
   270                           ;main.c: 61:     SPI_Init();
   271   001164  EC01  F009         	call	_SPI_Init	;wreg free
   272   001168                     
   273                           ;main.c: 62:     LCD_Init();
   274   001168  EC08  F008         	call	_LCD_Init	;wreg free
   275   00116C                     
   276                           ;main.c: 65:     LCD_WriteString("Hello, World!");
   277   00116C  0E01               	movlw	low STR_1
   278   00116E  6E0B               	movwf	LCD_WriteString@str^0,c
   279   001170  EC3E  F008         	call	_LCD_WriteString	;wreg free
   280   001174                     l179:
   281   001174  EFBA  F008         	goto	l179
   282   001178  EF00  F000         	goto	start
   283   00117C                     __end_of_main:
   284                           	callstack 0
   285                           
   286 ;; *************** function _SYSTEM_Initialize *****************
   287 ;; Defined at:
   288 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;Total ram usage:        0 bytes
   307 ;; Hardware stack levels used: 1
   308 ;; Hardware stack levels required when called: 2
   309 ;; This function calls:
   310 ;;		_ADC_Initialize
   311 ;;		_CLOCK_Initialize
   312 ;;		_INTERRUPT_Initialize
   313 ;;		_PIN_MANAGER_Initialize
   314 ;; This function is called by:
   315 ;;		_main
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319                           	psect	text1
   320   0011F0                     __ptext1:
   321                           	callstack 0
   322   0011F0                     _SYSTEM_Initialize:
   323                           	callstack 28
   324   0011F0                     
   325                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
   326   0011F0  EC25  F009         	call	_CLOCK_Initialize	;wreg free
   327                           
   328                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
   329   0011F4  EC74  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   330                           
   331                           ;mcc_generated_files/system/src/system.c: 43:     ADC_Initialize();
   332   0011F8  ECCB  F008         	call	_ADC_Initialize	;wreg free
   333   0011FC                     
   334                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
   335   0011FC  EC5A  F008         	call	_INTERRUPT_Initialize	;wreg free
   336   001200  0012               	return		;funcret
   337   001202                     __end_of_SYSTEM_Initialize:
   338                           	callstack 0
   339                           
   340 ;; *************** function _PIN_MANAGER_Initialize *****************
   341 ;; Defined at:
   342 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, status,2
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;Total ram usage:        0 bytes
   361 ;; Hardware stack levels used: 1
   362 ;; This function calls:
   363 ;;		Nothing
   364 ;; This function is called by:
   365 ;;		_SYSTEM_Initialize
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           	psect	text2
   370   0010E8                     __ptext2:
   371                           	callstack 0
   372   0010E8                     _PIN_MANAGER_Initialize:
   373                           	callstack 29
   374   0010E8                     
   375                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
   376   0010E8  0E00               	movlw	0
   377   0010EA  6E89               	movwf	137,c	;volatile
   378                           
   379                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
   380   0010EC  0E00               	movlw	0
   381   0010EE  6E8A               	movwf	138,c	;volatile
   382                           
   383                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
   384   0010F0  0E00               	movlw	0
   385   0010F2  6E8B               	movwf	139,c	;volatile
   386                           
   387                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
   388   0010F4  0E00               	movlw	0
   389   0010F6  6E8C               	movwf	140,c	;volatile
   390                           
   391                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
   392   0010F8  0E00               	movlw	0
   393   0010FA  6E8D               	movwf	141,c	;volatile
   394   0010FC                     
   395                           ;mcc_generated_files/system/src/pins.c: 55:     TRISA = 0xFF;
   396   0010FC  6892               	setf	146,c	;volatile
   397   0010FE                     
   398                           ;mcc_generated_files/system/src/pins.c: 56:     TRISB = 0xFF;
   399   0010FE  6893               	setf	147,c	;volatile
   400   001100                     
   401                           ;mcc_generated_files/system/src/pins.c: 57:     TRISC = 0xFF;
   402   001100  6894               	setf	148,c	;volatile
   403   001102                     
   404                           ;mcc_generated_files/system/src/pins.c: 58:     TRISD = 0xFF;
   405   001102  6895               	setf	149,c	;volatile
   406                           
   407                           ;mcc_generated_files/system/src/pins.c: 59:     TRISE = 0x7;
   408   001104  0E07               	movlw	7
   409   001106  6E96               	movwf	150,c	;volatile
   410                           
   411                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELH = 0x1F;
   412   001108  0E1F               	movlw	31
   413   00110A  6E7F               	movwf	127,c	;volatile
   414   00110C                     
   415                           ;mcc_generated_files/system/src/pins.c: 69:     WPUB = 0xFF;
   416   00110C  687C               	setf	124,c	;volatile
   417                           
   418                           ;mcc_generated_files/system/src/pins.c: 90:     IOCB = 0x0;
   419   00110E  0E00               	movlw	0
   420   001110  6E7D               	movwf	125,c	;volatile
   421   001112                     
   422                           ;mcc_generated_files/system/src/pins.c: 94:     INTCONbits.RBIE = 1;
   423   001112  86F2               	bsf	242,3,c	;volatile
   424   001114  0012               	return		;funcret
   425   001116                     __end_of_PIN_MANAGER_Initialize:
   426                           	callstack 0
   427                           
   428 ;; *************** function _INTERRUPT_Initialize *****************
   429 ;; Defined at:
   430 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels used: 1
   450 ;; Hardware stack levels required when called: 1
   451 ;; This function calls:
   452 ;;		_INT0_SetInterruptHandler
   453 ;;		_INT1_SetInterruptHandler
   454 ;;		_INT2_SetInterruptHandler
   455 ;; This function is called by:
   456 ;;		_SYSTEM_Initialize
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           	psect	text3
   461   0010B4                     __ptext3:
   462                           	callstack 0
   463   0010B4                     _INTERRUPT_Initialize:
   464                           	callstack 28
   465   0010B4                     
   466                           ;mcc_generated_files/system/src/interrupt.c: 45:     RCONbits.IPEN = 0;
   467   0010B4  9ED0               	bcf	208,7,c	;volatile
   468                           
   469                           ;mcc_generated_files/system/src/interrupt.c: 49:     (INTCONbits.INT0IF = 0);
   470   0010B6  92F2               	bcf	242,1,c	;volatile
   471                           
   472                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON2bits.INTEDG0 = 1);
   473   0010B8  8CF1               	bsf	241,6,c	;volatile
   474   0010BA                     
   475                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
   476   0010BA  0E00               	movlw	0
   477   0010BC  6E01               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
   478   0010BE  0E00               	movlw	0
   479   0010C0  6E02               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
   480   0010C2  EC20  F009         	call	_INT0_SetInterruptHandler	;wreg free
   481   0010C6                     
   482                           ;mcc_generated_files/system/src/interrupt.c: 57:     (INTCON3bits.INT1IF = 0);
   483   0010C6  90F0               	bcf	240,0,c	;volatile
   484   0010C8                     
   485                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON2bits.INTEDG1 = 1);
   486   0010C8  8AF1               	bsf	241,5,c	;volatile
   487                           
   488                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
   489   0010CA  0E00               	movlw	0
   490   0010CC  6E01               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
   491   0010CE  0E00               	movlw	0
   492   0010D0  6E02               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
   493   0010D2  EC1B  F009         	call	_INT1_SetInterruptHandler	;wreg free
   494   0010D6                     
   495                           ;mcc_generated_files/system/src/interrupt.c: 65:     (INTCON3bits.INT2IF = 0);
   496   0010D6  92F0               	bcf	240,1,c	;volatile
   497   0010D8                     
   498                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON2bits.INTEDG2 = 1);
   499   0010D8  88F1               	bsf	241,4,c	;volatile
   500                           
   501                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
   502   0010DA  0E00               	movlw	0
   503   0010DC  6E01               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
   504   0010DE  0E00               	movlw	0
   505   0010E0  6E02               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
   506   0010E2  EC16  F009         	call	_INT2_SetInterruptHandler	;wreg free
   507   0010E6  0012               	return		;funcret
   508   0010E8                     __end_of_INTERRUPT_Initialize:
   509                           	callstack 0
   510                           
   511 ;; *************** function _INT2_SetInterruptHandler *****************
   512 ;; Defined at:
   513 ;;		line 144 in file "mcc_generated_files/system/src/interrupt.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   516 ;;		 -> INT2_DefaultInterruptHandler(1), 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;Total ram usage:        2 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_INTERRUPT_Initialize
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text4
   542   00122C                     __ptext4:
   543                           	callstack 0
   544   00122C                     _INT2_SetInterruptHandler:
   545                           	callstack 28
   546   00122C                     
   547                           ;mcc_generated_files/system/src/interrupt.c: 145:     INT2_InterruptHandler = InterruptH
      +                          andler;
   548   00122C  C001  F00C         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
   549   001230  C002  F00D         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
   550   001234  0012               	return		;funcret
   551   001236                     __end_of_INT2_SetInterruptHandler:
   552                           	callstack 0
   553                           
   554 ;; *************** function _INT1_SetInterruptHandler *****************
   555 ;; Defined at:
   556 ;;		line 118 in file "mcc_generated_files/system/src/interrupt.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   559 ;;		 -> INT1_DefaultInterruptHandler(1), 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;		None
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, status,2, status,0
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;Total ram usage:        2 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		_INTERRUPT_Initialize
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text5
   585   001236                     __ptext5:
   586                           	callstack 0
   587   001236                     _INT1_SetInterruptHandler:
   588                           	callstack 28
   589   001236                     
   590                           ;mcc_generated_files/system/src/interrupt.c: 119:     INT1_InterruptHandler = InterruptH
      +                          andler;
   591   001236  C001  F00E         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
   592   00123A  C002  F00F         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
   593   00123E  0012               	return		;funcret
   594   001240                     __end_of_INT1_SetInterruptHandler:
   595                           	callstack 0
   596                           
   597 ;; *************** function _INT0_SetInterruptHandler *****************
   598 ;; Defined at:
   599 ;;		line 92 in file "mcc_generated_files/system/src/interrupt.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   602 ;;		 -> INT0_DefaultInterruptHandler(1), 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;Total ram usage:        2 bytes
   619 ;; Hardware stack levels used: 1
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_INTERRUPT_Initialize
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text6
   628   001240                     __ptext6:
   629                           	callstack 0
   630   001240                     _INT0_SetInterruptHandler:
   631                           	callstack 28
   632   001240                     
   633                           ;mcc_generated_files/system/src/interrupt.c: 93:     INT0_InterruptHandler = InterruptHa
      +                          ndler;
   634   001240  C001  F010         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
   635   001244  C002  F011         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
   636   001248  0012               	return		;funcret
   637   00124A                     __end_of_INT0_SetInterruptHandler:
   638                           	callstack 0
   639                           
   640 ;; *************** function _CLOCK_Initialize *****************
   641 ;; Defined at:
   642 ;;		line 40 in file "mcc_generated_files/system/src/clock.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;Total ram usage:        0 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_SYSTEM_Initialize
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text7
   670   00124A                     __ptext7:
   671                           	callstack 0
   672   00124A                     _CLOCK_Initialize:
   673                           	callstack 29
   674   00124A                     
   675                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON = (0 << 0x0)
   676   00124A  0E70               	movlw	112
   677   00124C  6ED3               	movwf	211,c	;volatile
   678                           
   679                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0)
   680   00124E  0E00               	movlw	0
   681   001250  6E9B               	movwf	155,c	;volatile
   682   001252  0012               	return		;funcret
   683   001254                     __end_of_CLOCK_Initialize:
   684                           	callstack 0
   685                           
   686 ;; *************** function _ADC_Initialize *****************
   687 ;; Defined at:
   688 ;;		line 53 in file "mcc_generated_files/adc/src/adc.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;Total ram usage:        0 bytes
   707 ;; Hardware stack levels used: 1
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_SYSTEM_Initialize
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text8
   716   001196                     __ptext8:
   717                           	callstack 0
   718   001196                     _ADC_Initialize:
   719                           	callstack 29
   720   001196                     
   721                           ;mcc_generated_files/adc/src/adc.c: 56:     ADCON1 = 0x0;
   722   001196  0E00               	movlw	0
   723   001198  6EC1               	movwf	193,c	;volatile
   724                           
   725                           ;mcc_generated_files/adc/src/adc.c: 59:     ADCON2 = 0x0;
   726   00119A  0E00               	movlw	0
   727   00119C  6EC0               	movwf	192,c	;volatile
   728                           
   729                           ;mcc_generated_files/adc/src/adc.c: 62:     ADRESL = 0x0;
   730   00119E  0E00               	movlw	0
   731   0011A0  6EC3               	movwf	195,c	;volatile
   732                           
   733                           ;mcc_generated_files/adc/src/adc.c: 65:     ADRESH = 0x0;
   734   0011A2  0E00               	movlw	0
   735   0011A4  6EC4               	movwf	196,c	;volatile
   736                           
   737                           ;mcc_generated_files/adc/src/adc.c: 69:     ADCON0 = 0x3;
   738   0011A6  0E03               	movlw	3
   739   0011A8  6EC2               	movwf	194,c	;volatile
   740   0011AA                     
   741                           ;mcc_generated_files/adc/src/adc.c: 72:     PIR1bits.ADIF = 0;
   742   0011AA  9C9E               	bcf	158,6,c	;volatile
   743   0011AC  0012               	return		;funcret
   744   0011AE                     __end_of_ADC_Initialize:
   745                           	callstack 0
   746                           
   747 ;; *************** function _SPI_Init *****************
   748 ;; Defined at:
   749 ;;		line 5 in file "spi.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; This function calls:
   770 ;;		Nothing
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text9
   777   001202                     __ptext9:
   778                           	callstack 0
   779   001202                     _SPI_Init:
   780                           	callstack 30
   781   001202                     
   782                           ;spi.c: 6:     TRISCbits.TRISC3 = 0;
   783   001202  9694               	bcf	148,3,c	;volatile
   784                           
   785                           ;spi.c: 7:     TRISCbits.TRISC5 = 0;
   786   001204  9A94               	bcf	148,5,c	;volatile
   787   001206                     
   788                           ;spi.c: 8:     SSPCON1 = 0x20;
   789   001206  0E20               	movlw	32
   790   001208  6EC6               	movwf	198,c	;volatile
   791                           
   792                           ;spi.c: 9:     SSPSTAT = 0x00;
   793   00120A  0E00               	movlw	0
   794   00120C  6EC7               	movwf	199,c	;volatile
   795   00120E  0012               	return		;funcret
   796   001210                     __end_of_SPI_Init:
   797                           	callstack 0
   798                           
   799 ;; *************** function _LCD_WriteString *****************
   800 ;; Defined at:
   801 ;;		line 37 in file "lcd.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  str             1   10[COMRAM] PTR const unsigned char 
   804 ;;		 -> STR_1(14), 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   816 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;Total ram usage:        1 bytes
   821 ;; Hardware stack levels used: 1
   822 ;; Hardware stack levels required when called: 6
   823 ;; This function calls:
   824 ;;		_LCD_WriteChar
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text10
   831   00107C                     __ptext10:
   832                           	callstack 0
   833   00107C                     _LCD_WriteString:
   834                           	callstack 24
   835   00107C                     
   836                           ;lcd.c: 38:     while (*str) {
   837   00107C  EF4A  F008         	goto	l1183
   838   001080                     l1179:
   839                           
   840                           ;lcd.c: 39:         LCD_WriteChar(*str++);
   841   001080  C00B  FFF6         	movff	LCD_WriteString@str,tblptrl
   842   001084                     	if	1	;There is more than 1 active tblptr byte
   843   001084  0E10               	movlw	high __smallconst
   844   001086  6EF7               	movwf	tblptrh,c
   845   001088                     	endif
   846   001088                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   847   001088  6AF8               	clrf	tblptru,c
   848   00108A                     	endif
   849   00108A                     	if	0	;tblptru may be non-zero
   850   00108A                     	endif
   851   00108A  0008               	tblrd		*
   852   00108C  50F5               	movf	tablat,w,c
   853   00108E  EC08  F009         	call	_LCD_WriteChar
   854   001092  2A0B               	incf	LCD_WriteString@str^0,f,c
   855   001094                     l1183:
   856                           
   857                           ;lcd.c: 38:     while (*str) {
   858   001094  C00B  FFF6         	movff	LCD_WriteString@str,tblptrl
   859   001098                     	if	1	;There is more than 1 active tblptr byte
   860   001098  0E10               	movlw	high __smallconst
   861   00109A  6EF7               	movwf	tblptrh,c
   862   00109C                     	endif
   863   00109C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   864   00109C  6AF8               	clrf	tblptru,c
   865   00109E                     	endif
   866   00109E                     	if	0	;tblptru may be non-zero
   867   00109E                     	endif
   868   00109E  0008               	tblrd		*
   869   0010A0  50F5               	movf	tablat,w,c
   870   0010A2  0900               	iorlw	0
   871   0010A4  A4D8               	btfss	status,2,c
   872   0010A6  EF57  F008         	goto	u101
   873   0010AA  EF59  F008         	goto	u100
   874   0010AE                     u101:
   875   0010AE  EF40  F008         	goto	l1179
   876   0010B2                     u100:
   877   0010B2  0012               	return		;funcret
   878   0010B4                     __end_of_LCD_WriteString:
   879                           	callstack 0
   880                           
   881 ;; *************** function _LCD_WriteChar *****************
   882 ;; Defined at:
   883 ;;		line 33 in file "lcd.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  data            1    wreg     unsigned char 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  data            1    9[COMRAM] unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;Total ram usage:        1 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; Hardware stack levels required when called: 5
   904 ;; This function calls:
   905 ;;		_LCD_Send
   906 ;; This function is called by:
   907 ;;		_LCD_WriteString
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text11
   912   001210                     __ptext11:
   913                           	callstack 0
   914   001210                     _LCD_WriteChar:
   915                           	callstack 24
   916                           
   917                           ;incstack = 0
   918                           ;LCD_WriteChar@data stored from wreg
   919   001210  6E0A               	movwf	LCD_WriteChar@data^0,c
   920   001212                     
   921                           ;lcd.c: 34:     LCD_Send(data, 0x01);
   922   001212  0E01               	movlw	1
   923   001214  6E06               	movwf	LCD_Send@mode^0,c
   924   001216  500A               	movf	LCD_WriteChar@data^0,w,c
   925   001218  EC9F  F008         	call	_LCD_Send
   926   00121C  0012               	return		;funcret
   927   00121E                     __end_of_LCD_WriteChar:
   928                           	callstack 0
   929                           
   930 ;; *************** function _LCD_Init *****************
   931 ;; Defined at:
   932 ;;		line 43 in file "lcd.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;Total ram usage:        1 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; Hardware stack levels required when called: 6
   953 ;; This function calls:
   954 ;;		_LCD_Command
   955 ;;		_MCP23S09_Init
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text12
   962   001010                     __ptext12:
   963                           	callstack 0
   964   001010                     _LCD_Init:
   965                           	callstack 24
   966   001010                     
   967                           ;lcd.c: 45:     MCP23S09_Init();
   968   001010  ECD7  F008         	call	_MCP23S09_Init	;wreg free
   969   001014                     
   970                           ;lcd.c: 46:     _delay((unsigned long)((50)*(4000000/4000.0)));
   971   001014  0E41               	movlw	65
   972   001016  6E0B               	movwf	??_LCD_Init^0,c
   973   001018  0EEE               	movlw	238
   974   00101A                     u117:
   975   00101A  2EE8               	decfsz	wreg,f,c
   976   00101C  D7FE               	bra	u117
   977   00101E  2E0B               	decfsz	??_LCD_Init^0,f,c
   978   001020  D7FC               	bra	u117
   979   001022  F000 F000          	nop2	
   980   001026                     
   981                           ;lcd.c: 48:     LCD_Command(0x03);
   982   001026  0E03               	movlw	3
   983   001028  EC0F  F009         	call	_LCD_Command
   984   00102C                     
   985                           ;lcd.c: 49:     _delay((unsigned long)((5)*(4000000/4000.0)));
   986   00102C  0E07               	movlw	7
   987   00102E  6E0B               	movwf	??_LCD_Init^0,c
   988   001030  0E7D               	movlw	125
   989   001032                     u127:
   990   001032  2EE8               	decfsz	wreg,f,c
   991   001034  D7FE               	bra	u127
   992   001036  2E0B               	decfsz	??_LCD_Init^0,f,c
   993   001038  D7FC               	bra	u127
   994   00103A  0000               	nop	
   995   00103C                     
   996                           ;lcd.c: 50:     LCD_Command(0x03);
   997   00103C  0E03               	movlw	3
   998   00103E  EC0F  F009         	call	_LCD_Command
   999   001042                     
  1000                           ;lcd.c: 51:     _delay((unsigned long)((150)*(4000000/4000000.0)));
  1001   001042  0E32               	movlw	50
  1002   001044                     u137:
  1003   001044  2EE8               	decfsz	wreg,f,c
  1004   001046  D7FE               	bra	u137
  1005   001048                     
  1006                           ;lcd.c: 52:     LCD_Command(0x03);
  1007   001048  0E03               	movlw	3
  1008   00104A  EC0F  F009         	call	_LCD_Command
  1009   00104E                     
  1010                           ;lcd.c: 53:     LCD_Command(0x02);
  1011   00104E  0E02               	movlw	2
  1012   001050  EC0F  F009         	call	_LCD_Command
  1013   001054                     
  1014                           ;lcd.c: 55:     LCD_Command(0x28);
  1015   001054  0E28               	movlw	40
  1016   001056  EC0F  F009         	call	_LCD_Command
  1017   00105A                     
  1018                           ;lcd.c: 56:     LCD_Command(0x0C);
  1019   00105A  0E0C               	movlw	12
  1020   00105C  EC0F  F009         	call	_LCD_Command
  1021   001060                     
  1022                           ;lcd.c: 57:     LCD_Command(0x01);
  1023   001060  0E01               	movlw	1
  1024   001062  EC0F  F009         	call	_LCD_Command
  1025   001066                     
  1026                           ;lcd.c: 58:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1027   001066  0E03               	movlw	3
  1028   001068  6E0B               	movwf	??_LCD_Init^0,c
  1029   00106A  0E98               	movlw	152
  1030   00106C                     u147:
  1031   00106C  2EE8               	decfsz	wreg,f,c
  1032   00106E  D7FE               	bra	u147
  1033   001070  2E0B               	decfsz	??_LCD_Init^0,f,c
  1034   001072  D7FC               	bra	u147
  1035   001074                     
  1036                           ;lcd.c: 59:     LCD_Command(0x06);
  1037   001074  0E06               	movlw	6
  1038   001076  EC0F  F009         	call	_LCD_Command
  1039   00107A  0012               	return		;funcret
  1040   00107C                     __end_of_LCD_Init:
  1041                           	callstack 0
  1042                           
  1043 ;; *************** function _MCP23S09_Init *****************
  1044 ;; Defined at:
  1045 ;;		line 12 in file "mcp23s09.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 2
  1066 ;; This function calls:
  1067 ;;		_MCP23S09_Write
  1068 ;; This function is called by:
  1069 ;;		_LCD_Init
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text13
  1074   0011AE                     __ptext13:
  1075                           	callstack 0
  1076   0011AE                     _MCP23S09_Init:
  1077                           	callstack 27
  1078   0011AE                     
  1079                           ;mcp23s09.c: 14:     TRISDbits.TRISD0 = 0;
  1080   0011AE  9095               	bcf	149,0,c	;volatile
  1081   0011B0                     
  1082                           ;mcp23s09.c: 17:     MCP23S09_Write(0x0A, 0xFF);
  1083   0011B0  0EFF               	movlw	255
  1084   0011B2  6E02               	movwf	MCP23S09_Write@data^0,c
  1085   0011B4  0E0A               	movlw	10
  1086   0011B6  ECBE  F008         	call	_MCP23S09_Write
  1087                           
  1088                           ;mcp23s09.c: 19:     MCP23S09_Write(0x00, 0x00);
  1089   0011BA  0E00               	movlw	0
  1090   0011BC  6E02               	movwf	MCP23S09_Write@data^0,c
  1091   0011BE  0E00               	movlw	0
  1092   0011C0  ECBE  F008         	call	_MCP23S09_Write
  1093   0011C4  0012               	return		;funcret
  1094   0011C6                     __end_of_MCP23S09_Init:
  1095                           	callstack 0
  1096                           
  1097 ;; *************** function _LCD_Command *****************
  1098 ;; Defined at:
  1099 ;;		line 29 in file "lcd.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  cmd             1    wreg     unsigned char 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  cmd             1    9[COMRAM] unsigned char 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;Total ram usage:        1 bytes
  1118 ;; Hardware stack levels used: 1
  1119 ;; Hardware stack levels required when called: 5
  1120 ;; This function calls:
  1121 ;;		_LCD_Send
  1122 ;; This function is called by:
  1123 ;;		_LCD_Init
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text14
  1128   00121E                     __ptext14:
  1129                           	callstack 0
  1130   00121E                     _LCD_Command:
  1131                           	callstack 24
  1132                           
  1133                           ;incstack = 0
  1134                           ;LCD_Command@cmd stored from wreg
  1135   00121E  6E0A               	movwf	LCD_Command@cmd^0,c
  1136   001220                     
  1137                           ;lcd.c: 30:     LCD_Send(cmd, 0);
  1138   001220  0E00               	movlw	0
  1139   001222  6E06               	movwf	LCD_Send@mode^0,c
  1140   001224  500A               	movf	LCD_Command@cmd^0,w,c
  1141   001226  EC9F  F008         	call	_LCD_Send
  1142   00122A  0012               	return		;funcret
  1143   00122C                     __end_of_LCD_Command:
  1144                           	callstack 0
  1145                           
  1146 ;; *************** function _LCD_Send *****************
  1147 ;; Defined at:
  1148 ;;		line 21 in file "lcd.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  data            1    wreg     unsigned char 
  1151 ;;  mode            1    5[COMRAM] unsigned char 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  data            1    8[COMRAM] unsigned char 
  1154 ;;  low_nibble      1    7[COMRAM] unsigned char 
  1155 ;;  high_nibble     1    6[COMRAM] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, status,0, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1165 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;Total ram usage:        4 bytes
  1170 ;; Hardware stack levels used: 1
  1171 ;; Hardware stack levels required when called: 4
  1172 ;; This function calls:
  1173 ;;		_LCD_Write4Bits
  1174 ;; This function is called by:
  1175 ;;		_LCD_Command
  1176 ;;		_LCD_WriteChar
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text15
  1181   00113E                     __ptext15:
  1182                           	callstack 0
  1183   00113E                     _LCD_Send:
  1184                           	callstack 24
  1185                           
  1186                           ;incstack = 0
  1187                           ;LCD_Send@data stored from wreg
  1188   00113E  6E09               	movwf	LCD_Send@data^0,c
  1189   001140                     
  1190                           ;lcd.c: 22:     uint8_t high_nibble = data & 0xF0;
  1191   001140  5009               	movf	LCD_Send@data^0,w,c
  1192   001142  0BF0               	andlw	240
  1193   001144  6E07               	movwf	LCD_Send@high_nibble^0,c
  1194                           
  1195                           ;lcd.c: 23:     uint8_t low_nibble = (data << 4) & 0xF0;
  1196   001146  3809               	swapf	LCD_Send@data^0,w,c
  1197   001148  0BF0               	andlw	240
  1198   00114A  0BF0               	andlw	240
  1199   00114C  6E08               	movwf	LCD_Send@low_nibble^0,c
  1200   00114E                     
  1201                           ;lcd.c: 25:     LCD_Write4Bits(high_nibble | mode);
  1202   00114E  5007               	movf	LCD_Send@high_nibble^0,w,c
  1203   001150  1006               	iorwf	LCD_Send@mode^0,w,c
  1204   001152  ECEE  F008         	call	_LCD_Write4Bits
  1205   001156                     
  1206                           ;lcd.c: 26:     LCD_Write4Bits(low_nibble | mode);
  1207   001156  5008               	movf	LCD_Send@low_nibble^0,w,c
  1208   001158  1006               	iorwf	LCD_Send@mode^0,w,c
  1209   00115A  ECEE  F008         	call	_LCD_Write4Bits
  1210   00115E  0012               	return		;funcret
  1211   001160                     __end_of_LCD_Send:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _LCD_Write4Bits *****************
  1215 ;; Defined at:
  1216 ;;		line 16 in file "lcd.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  data            1    wreg     unsigned char 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  data            1    4[COMRAM] unsigned char 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;Total ram usage:        1 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 3
  1237 ;; This function calls:
  1238 ;;		_LCD_PulseEnable
  1239 ;;		_MCP23S09_Write
  1240 ;; This function is called by:
  1241 ;;		_LCD_Send
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text16
  1246   0011DC                     __ptext16:
  1247                           	callstack 0
  1248   0011DC                     _LCD_Write4Bits:
  1249                           	callstack 24
  1250                           
  1251                           ;incstack = 0
  1252                           ;LCD_Write4Bits@data stored from wreg
  1253   0011DC  6E05               	movwf	LCD_Write4Bits@data^0,c
  1254   0011DE                     
  1255                           ;lcd.c: 17:     MCP23S09_Write(0x09, data);
  1256   0011DE  C005  F002         	movff	LCD_Write4Bits@data,MCP23S09_Write@data
  1257   0011E2  0E09               	movlw	9
  1258   0011E4  ECBE  F008         	call	_MCP23S09_Write
  1259   0011E8                     
  1260                           ;lcd.c: 18:     LCD_PulseEnable(data);
  1261   0011E8  5005               	movf	LCD_Write4Bits@data^0,w,c
  1262   0011EA  EC8B  F008         	call	_LCD_PulseEnable
  1263   0011EE  0012               	return		;funcret
  1264   0011F0                     __end_of_LCD_Write4Bits:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _LCD_PulseEnable *****************
  1268 ;; Defined at:
  1269 ;;		line 9 in file "lcd.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  data            1    wreg     unsigned char 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  data            1    3[COMRAM] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;Total ram usage:        1 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; Hardware stack levels required when called: 2
  1290 ;; This function calls:
  1291 ;;		_MCP23S09_Write
  1292 ;; This function is called by:
  1293 ;;		_LCD_Write4Bits
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text17
  1298   001116                     __ptext17:
  1299                           	callstack 0
  1300   001116                     _LCD_PulseEnable:
  1301                           	callstack 24
  1302                           
  1303                           ;incstack = 0
  1304                           ;LCD_PulseEnable@data stored from wreg
  1305   001116  6E04               	movwf	LCD_PulseEnable@data^0,c
  1306   001118                     
  1307                           ;lcd.c: 10:     MCP23S09_Write(0x09, data | 0x04);
  1308   001118  5004               	movf	LCD_PulseEnable@data^0,w,c
  1309   00111A  0904               	iorlw	4
  1310   00111C  6E02               	movwf	MCP23S09_Write@data^0,c
  1311   00111E  0E09               	movlw	9
  1312   001120  ECBE  F008         	call	_MCP23S09_Write
  1313   001124                     
  1314                           ;lcd.c: 11:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  1315   001124  0000               	nop	
  1316                           
  1317                           ;lcd.c: 12:     MCP23S09_Write(0x09, data & ~0x04);
  1318   001126  5004               	movf	LCD_PulseEnable@data^0,w,c
  1319   001128  0BFB               	andlw	251
  1320   00112A  6E02               	movwf	MCP23S09_Write@data^0,c
  1321   00112C  0E09               	movlw	9
  1322   00112E  ECBE  F008         	call	_MCP23S09_Write
  1323   001132                     
  1324                           ;lcd.c: 13:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1325   001132  0E10               	movlw	16
  1326   001134                     u157:
  1327   001134  2EE8               	decfsz	wreg,f,c
  1328   001136  D7FE               	bra	u157
  1329   001138  F000 F000          	nop2	
  1330   00113C  0012               	return		;funcret
  1331   00113E                     __end_of_LCD_PulseEnable:
  1332                           	callstack 0
  1333                           
  1334 ;; *************** function _MCP23S09_Write *****************
  1335 ;; Defined at:
  1336 ;;		line 23 in file "mcp23s09.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  reg             1    wreg     unsigned char 
  1339 ;;  data            1    1[COMRAM] unsigned char 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  reg             1    2[COMRAM] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1351 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;Total ram usage:        2 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 1
  1358 ;; This function calls:
  1359 ;;		_SPI_Write
  1360 ;; This function is called by:
  1361 ;;		_MCP23S09_Init
  1362 ;;		_LCD_PulseEnable
  1363 ;;		_LCD_Write4Bits
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text18
  1368   00117C                     __ptext18:
  1369                           	callstack 0
  1370   00117C                     _MCP23S09_Write:
  1371                           	callstack 25
  1372                           
  1373                           ;incstack = 0
  1374                           ;MCP23S09_Write@reg stored from wreg
  1375   00117C  6E03               	movwf	MCP23S09_Write@reg^0,c
  1376   00117E                     
  1377                           ;mcp23s09.c: 24:     LATDbits.LATD0 = 0;
  1378   00117E  908C               	bcf	140,0,c	;volatile
  1379   001180                     
  1380                           ;mcp23s09.c: 25:     SPI_Write(0b01000000);
  1381   001180  0E40               	movlw	64
  1382   001182  ECE3  F008         	call	_SPI_Write
  1383   001186                     
  1384                           ;mcp23s09.c: 26:     SPI_Write(reg);
  1385   001186  5003               	movf	MCP23S09_Write@reg^0,w,c
  1386   001188  ECE3  F008         	call	_SPI_Write
  1387   00118C                     
  1388                           ;mcp23s09.c: 27:     SPI_Write(data);
  1389   00118C  5002               	movf	MCP23S09_Write@data^0,w,c
  1390   00118E  ECE3  F008         	call	_SPI_Write
  1391   001192                     
  1392                           ;mcp23s09.c: 28:    LATDbits.LATD0 = 1;
  1393   001192  808C               	bsf	140,0,c	;volatile
  1394   001194  0012               	return		;funcret
  1395   001196                     __end_of_MCP23S09_Write:
  1396                           	callstack 0
  1397                           
  1398 ;; *************** function _SPI_Write *****************
  1399 ;; Defined at:
  1400 ;;		line 12 in file "spi.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  data            1    wreg     unsigned char 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  data            1    0[COMRAM] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;Total ram usage:        1 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_MCP23S09_Write
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text19
  1428   0011C6                     __ptext19:
  1429                           	callstack 0
  1430   0011C6                     _SPI_Write:
  1431                           	callstack 25
  1432                           
  1433                           ;incstack = 0
  1434                           ;SPI_Write@data stored from wreg
  1435   0011C6  6E01               	movwf	SPI_Write@data^0,c
  1436   0011C8                     
  1437                           ;spi.c: 13:     SSPBUF = data;
  1438   0011C8  C001  FFC9         	movff	SPI_Write@data,4041	;volatile
  1439   0011CC                     l198:
  1440   0011CC  A0C7               	btfss	199,0,c	;volatile
  1441   0011CE  EFEB  F008         	goto	u11
  1442   0011D2  EFED  F008         	goto	u10
  1443   0011D6                     u11:
  1444   0011D6  EFE6  F008         	goto	l198
  1445   0011DA                     u10:
  1446   0011DA  0012               	return		;funcret
  1447   0011DC                     __end_of_SPI_Write:
  1448                           	callstack 0
  1449                           
  1450                           	psect	rparam
  1451   000000                     
  1452                           	psect	config
  1453                           
  1454                           ; Padding undefined space
  1455   300000                     	org	3145728
  1456   300000  FF                 	db	255
  1457                           
  1458                           ;Config register CONFIG1H @ 0x300001
  1459                           ;	Oscillator Selection bits
  1460                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1461                           ;	Fail-Safe Clock Monitor Enable bit
  1462                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1463                           ;	Internal/External Oscillator Switchover bit
  1464                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1465   300001                     	org	3145729
  1466   300001  08                 	db	8
  1467                           
  1468                           ;Config register CONFIG2L @ 0x300002
  1469                           ;	Power-up Timer Enable bit
  1470                           ;	PWRTEN = OFF, PWRT disabled
  1471                           ;	Brown-out Reset Enable bits
  1472                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1473                           ;	Brown Out Reset Voltage bits
  1474                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1475   300002                     	org	3145730
  1476   300002  1F                 	db	31
  1477                           
  1478                           ;Config register CONFIG2H @ 0x300003
  1479                           ;	Watchdog Timer Enable bit
  1480                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1481                           ;	Watchdog Timer Postscale Select bits
  1482                           ;	WDTPS = 32768, 1:32768
  1483   300003                     	org	3145731
  1484   300003  1E                 	db	30
  1485                           
  1486                           ; Padding undefined space
  1487   300004                     	org	3145732
  1488   300004  FF                 	db	255
  1489                           
  1490                           ;Config register CONFIG3H @ 0x300005
  1491                           ;	CCP2 MUX bit
  1492                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1493                           ;	PORTB A/D Enable bit
  1494                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1495                           ;	Low-Power Timer1 Oscillator Enable bit
  1496                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1497                           ;	HFINTOSC Fast Start-up
  1498                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1499                           ;	MCLR Pin Enable bit
  1500                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1501   300005                     	org	3145733
  1502   300005  8B                 	db	139
  1503                           
  1504                           ;Config register CONFIG4L @ 0x300006
  1505                           ;	Stack Full/Underflow Reset Enable bit
  1506                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1507                           ;	Single-Supply ICSP Enable bit
  1508                           ;	LVP = ON, Single-Supply ICSP enabled
  1509                           ;	Extended Instruction Set Enable bit
  1510                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1511                           ;	Background Debugger Enable bit
  1512                           ;	DEBUG = 0x1, unprogrammed default
  1513   300006                     	org	3145734
  1514   300006  85                 	db	133
  1515                           
  1516                           ; Padding undefined space
  1517   300007                     	org	3145735
  1518   300007  FF                 	db	255
  1519                           
  1520                           ;Config register CONFIG5L @ 0x300008
  1521                           ;	Code Protection Block 0
  1522                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1523                           ;	Code Protection Block 1
  1524                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1525                           ;	Code Protection Block 2
  1526                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1527                           ;	Code Protection Block 3
  1528                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1529   300008                     	org	3145736
  1530   300008  0F                 	db	15
  1531                           
  1532                           ;Config register CONFIG5H @ 0x300009
  1533                           ;	Boot Block Code Protection bit
  1534                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1535                           ;	Data EEPROM Code Protection bit
  1536                           ;	CPD = OFF, Data EEPROM not code-protected
  1537   300009                     	org	3145737
  1538   300009  C0                 	db	192
  1539                           
  1540                           ;Config register CONFIG6L @ 0x30000A
  1541                           ;	Write Protection Block 0
  1542                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1543                           ;	Write Protection Block 1
  1544                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1545                           ;	Write Protection Block 2
  1546                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1547                           ;	Write Protection Block 3
  1548                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1549   30000A                     	org	3145738
  1550   30000A  0F                 	db	15
  1551                           
  1552                           ;Config register CONFIG6H @ 0x30000B
  1553                           ;	Configuration Register Write Protection bit
  1554                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1555                           ;	Boot Block Write Protection bit
  1556                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1557                           ;	Data EEPROM Write Protection bit
  1558                           ;	WRTD = OFF, Data EEPROM not write-protected
  1559   30000B                     	org	3145739
  1560   30000B  E0                 	db	224
  1561                           
  1562                           ;Config register CONFIG7L @ 0x30000C
  1563                           ;	Table Read Protection Block 0
  1564                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1565                           ;	Table Read Protection Block 1
  1566                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1567                           ;	Table Read Protection Block 2
  1568                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1569                           ;	Table Read Protection Block 3
  1570                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1571   30000C                     	org	3145740
  1572   30000C  0F                 	db	15
  1573                           
  1574                           ;Config register CONFIG7H @ 0x30000D
  1575                           ;	Boot Block Table Read Protection bit
  1576                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1577   30000D                     	org	3145741
  1578   30000D  40                 	db	64
  1579                           tosu	equ	0xFFF
  1580                           tosh	equ	0xFFE
  1581                           tosl	equ	0xFFD
  1582                           stkptr	equ	0xFFC
  1583                           pclatu	equ	0xFFB
  1584                           pclath	equ	0xFFA
  1585                           pcl	equ	0xFF9
  1586                           tblptru	equ	0xFF8
  1587                           tblptrh	equ	0xFF7
  1588                           tblptrl	equ	0xFF6
  1589                           tablat	equ	0xFF5
  1590                           prodh	equ	0xFF4
  1591                           prodl	equ	0xFF3
  1592                           indf0	equ	0xFEF
  1593                           postinc0	equ	0xFEE
  1594                           postdec0	equ	0xFED
  1595                           preinc0	equ	0xFEC
  1596                           plusw0	equ	0xFEB
  1597                           fsr0h	equ	0xFEA
  1598                           fsr0l	equ	0xFE9
  1599                           wreg	equ	0xFE8
  1600                           indf1	equ	0xFE7
  1601                           postinc1	equ	0xFE6
  1602                           postdec1	equ	0xFE5
  1603                           preinc1	equ	0xFE4
  1604                           plusw1	equ	0xFE3
  1605                           fsr1h	equ	0xFE2
  1606                           fsr1l	equ	0xFE1
  1607                           bsr	equ	0xFE0
  1608                           indf2	equ	0xFDF
  1609                           postinc2	equ	0xFDE
  1610                           postdec2	equ	0xFDD
  1611                           preinc2	equ	0xFDC
  1612                           plusw2	equ	0xFDB
  1613                           fsr2h	equ	0xFDA
  1614                           fsr2l	equ	0xFD9
  1615                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    LCD_WriteString@str	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _main->_LCD_WriteString
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _LCD_WriteString->_LCD_WriteChar
    _LCD_WriteChar->_LCD_Send
    _LCD_Init->_LCD_Command
    _MCP23S09_Init->_MCP23S09_Write
    _LCD_Command->_LCD_Send
    _LCD_Send->_LCD_Write4Bits
    _LCD_Write4Bits->_LCD_PulseEnable
    _LCD_PulseEnable->_MCP23S09_Write
    _MCP23S09_Write->_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3402
                           _LCD_Init
                    _LCD_WriteString
                           _SPI_Init
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      1     0      1    1395
                                             10 COMRAM     1     0      1
                      _LCD_WriteChar
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteChar                                        1     1      0    1274
                                              9 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    1713
                                             10 COMRAM     1     1      0
                        _LCD_Command
                      _MCP23S09_Init
 ---------------------------------------------------------------------------------
 (2) _MCP23S09_Init                                        0     0      0     439
                     _MCP23S09_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0    1274
                                              9 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             4     3      1    1252
                                              5 COMRAM     4     3      1
                     _LCD_Write4Bits
 ---------------------------------------------------------------------------------
 (4) _LCD_Write4Bits                                       1     1      0     966
                                              4 COMRAM     1     1      0
                    _LCD_PulseEnable
                     _MCP23S09_Write
 ---------------------------------------------------------------------------------
 (5) _LCD_PulseEnable                                      1     1      0     483
                                              3 COMRAM     1     1      0
                     _MCP23S09_Write
 ---------------------------------------------------------------------------------
 (5) _MCP23S09_Write                                       2     1      1     439
                                              1 COMRAM     2     1      1
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (6) _SPI_Write                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
       _LCD_Send
         _LCD_Write4Bits
           _LCD_PulseEnable
             _MCP23S09_Write
               _SPI_Write
           _MCP23S09_Write
     _MCP23S09_Init
       _MCP23S09_Write
   _LCD_WriteString
     _LCD_WriteChar
       _LCD_Send
   _SPI_Init
   _SYSTEM_Initialize
     _ADC_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      B      11       1       17.9%
STACK                0      0       0       2        0.0%
DATA                 0      0      11       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhhlhh      1C      0       0      37        0.0%
BITBIGSFRhhlhl       2      0       0      38        0.0%
BITBIGSFRhhllhh      6      0       0      39        0.0%
BITBIGSFRhhllhl      1      0       0      40        0.0%
BITBIGSFRhhlll       1      0       0      41        0.0%
BITBIGSFRlh         21      0       0      42        0.0%
BITBIGSFRllhhh       2      0       0      43        0.0%
BITBIGSFRllhhl       4      0       0      44        0.0%
BITBIGSFRllhl        4      0       0      45        0.0%
BITBIGSFRlllh        9      0       0      46        0.0%
BITBIGSFRllllh       1      0       0      47        0.0%
BITBIGSFRlllll      1C      0       0      48        0.0%
ABS                  0      0      11      49        0.0%
BIGRAM             F5F      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 05 11:19:16 2024

                            ?_LCD_Command 0001                               _SSPSTATbits 0FC7  
                                      l19 11AC                                        l71 1114  
                                      l85 1200                                        u10 11DA  
                                      u11 11D6                                       l120 10E6  
                                     l201 11DA                                       l130 1248  
                                     l212 11C4                                       l230 115E  
                                     l215 1194                                       l143 123E  
                                     l224 113C                                       l233 122A  
                                     l242 10B2                                       l227 11EE  
                                     l236 121C                                       l156 1234  
                                     l180 1174                                       l245 107A  
                                     l166 1252                                       l195 120E  
                                     l179 1174                                       l198 11CC  
                                     l921 11C8                                       l961 10FC  
                                     l955 1196                                       l971 1112  
                                     l963 10FE                                       l957 11AA  
                                     l973 124A                                       l965 1100  
                                     l967 1102                                       l959 10E8  
                                     l969 110C                                       l999 1202  
                                     u100 10B2                                       u101 10AE  
                                     u117 101A                                       u127 1032  
                                     u137 1044                                       u147 106C  
                                     u157 1134                ??_INT0_SetInterruptHandler 0003  
                                     wreg 0FE8                         ??_LCD_WriteString 000C  
                                    l1001 1206                                      l1101 118C  
                                    l1103 1192                                      l1111 11DE  
                                    l1105 1118                                      l1113 11E8  
                                    l1121 1140                                      l1107 1124  
                                    l1123 114E                                      l1115 1240  
                                    l1131 10C6                                      l1109 1132  
                                    l1125 1156                                      l1141 11B0  
                                    l1117 1236                                      l1133 10C8  
                                    l1143 1220                                      l1151 1010  
                                    l1119 122C                                      l1135 10D6  
                                    l1127 10B4                                      l1161 1042  
                                    l1153 1014                                      l1145 1212  
                                    l1137 10D8                                      l1129 10BA  
                                    l1139 11AE                                      l1171 1060  
                                    l1163 1048                                      l1155 1026  
                                    l1147 11F0                                      l1173 1066  
                                    l1165 104E                                      l1157 102C  
                                    l1181 1092                                      l1149 11FC  
                                    l1095 117E                                      l1175 1074  
                                    l1167 1054                                      l1159 103C  
                                    l1183 1094                                      l1191 116C  
                                    l1097 1180                                      l1169 105A  
                                    l1177 107C                                      l1185 1160  
                                    l1099 1186                                      l1179 1080  
                                    l1187 1164                                      l1189 1168  
                                    STR_1 1001                        LCD_WriteString@str 000B  
                                    _IOCB 0F7D                                      _LATA 0F89  
                                    _LATB 0F8A                                      _LATC 0F8B  
                                    _LATD 0F8C                                      _LATE 0F8D  
                                    _WPUB 0F7C                         MCP23S09_Write@reg 0003  
                                    _main 1160                 ?_INT2_SetInterruptHandler 0001  
                                    start 0000                             _LCD_WriteChar 1210  
                     LCD_PulseEnable@data 0004                              ___param_bank 0000  
                        __end_of_LCD_Init 107C                          __end_of_LCD_Send 1160  
                                   ?_main 0001                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
                      MCP23S09_Write@data 0002                          __end_of_SPI_Init 1210  
                _INT1_SetInterruptHandler 1236                                     tablat 0FF5  
                                   status 0FD8                            _LCD_Write4Bits 11DC  
                          ?_LCD_WriteChar 0001                           __initialization 1254  
                            __end_of_main 117C                              LCD_Send@data 0009  
                            LCD_Send@mode 0006                                    ??_main 000C  
                           __activetblptr 0003                                    _ADCON0 0FC2  
                                  _ADCON1 0FC1                                    _ADCON2 0FC0  
                                  _ADRESH 0FC4                                    _ADRESL 0FC3  
                   __end_of_MCP23S09_Init 11C6                                    _ANSELH 0F7F  
                         _LCD_PulseEnable 1116                    __end_of_LCD_Write4Bits 11F0  
                                  _OSCCON 0FD3                                    _SSPBUF 0FC9  
                                  isa$std 0001                         ?_CLOCK_Initialize 0001  
                       __end_of_SPI_Write 11DC              _INT2_DefaultInterruptHandler 0000  
                      ??_CLOCK_Initialize 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8  INT2_SetInterruptHandler@InterruptHandler 0001  
INT1_SetInterruptHandler@InterruptHandler 0001  INT0_SetInterruptHandler@InterruptHandler 0001  
                       _SYSTEM_Initialize 11F0                           ?_LCD_Write4Bits 0001  
                              __accesstop 0060                   __end_of__initialization 1254  
                               ?_LCD_Init 0001                                 ?_LCD_Send 0006  
                         ??_LCD_WriteChar 000A                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 0001                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0003                           _LCD_WriteString 107C  
                               ?_SPI_Init 0001                            _MCP23S09_Write 117C  
        __end_of_INT2_SetInterruptHandler 1236                   __end_of_LCD_PulseEnable 113E  
               __end_of_SYSTEM_Initialize 1202                                ??_LCD_Init 000B  
                   _INT0_InterruptHandler 0010                                ??_LCD_Send 0007  
                              __pnvCOMRAM 000C                                ??_SPI_Init 0001  
                  __end_of_MCP23S09_Write 1196                ??_INT1_SetInterruptHandler 0003  
                                 _OSCTUNE 0F9B                                   _SSPCON1 0FC6  
                                 _SSPSTAT 0FC7                 ?_INT0_SetInterruptHandler 0001  
                 __end_of_LCD_WriteString 10B4                                   __Hparam 0000  
                           SPI_Write@data 0001                                   __Lparam 0000  
                       LCD_WriteChar@data 000A                              __psmallconst 1000  
                                 __pcinit 1254                                   __ramtop 1000  
                                 __ptext0 1160                                   __ptext1 11F0  
                                 __ptext2 10E8                                   __ptext3 10B4  
                                 __ptext4 122C                                   __ptext5 1236  
                                 __ptext6 1240                                   __ptext7 124A  
                                 __ptext8 1196                                   __ptext9 1202  
                         ?_MCP23S09_Write 0002                  ??_PIN_MANAGER_Initialize 0001  
                        ?_LCD_PulseEnable 0001                      end_of_initialization 1254  
                _INT2_SetInterruptHandler 122C                            LCD_Command@cmd 000A  
                   _INT1_InterruptHandler 000E                                 _TRISCbits 0F94  
                               _TRISDbits 0F95                          ??_LCD_Write4Bits 0005  
                               _SPI_Write 11C6                          ?_LCD_WriteString 000B  
            __end_of_INTERRUPT_Initialize 10E8                             ??_LCD_Command 000A  
            _INT0_DefaultInterruptHandler 0000                            _ADC_Initialize 1196  
                      LCD_Write4Bits@data 0005                       start_initialization 1254  
                      LCD_Send@low_nibble 0008                                ?_SPI_Write 0001  
                   __end_of_LCD_WriteChar 121E                    __end_of_ADC_Initialize 11AE  
                     __end_of_LCD_Command 122C          __end_of_INT0_SetInterruptHandler 124A  
                           _MCP23S09_Init 11AE                     _INT2_InterruptHandler 000C  
                  _PIN_MANAGER_Initialize 10E8                          ??_MCP23S09_Write 0003  
                         ?_ADC_Initialize 0001                               __smallconst 1000  
              ??_INT2_SetInterruptHandler 0003                               ??_SPI_Write 0001  
                          ?_MCP23S09_Init 0001                      _INTERRUPT_Initialize 10B4  
                        _CLOCK_Initialize 124A                                  _LCD_Init 1010  
                                _LCD_Send 113E                                  _LATDbits 0F8C  
               ?_INT1_SetInterruptHandler 0001                                  _PIR1bits 0F9E  
                                _RCONbits 0FD0                               _LCD_Command 121E  
                                _SPI_Init 1202                                _ADCON0bits 0FC2  
                             _INTCON2bits 0FF1                               _INTCON3bits 0FF0  
                   ?_INTERRUPT_Initialize 0001                  _INT0_SetInterruptHandler 1240  
                                __Hrparam 0000                                  __Lrparam 0000  
                         ??_MCP23S09_Init 0004                                  __ptext10 107C  
                                __ptext11 1210                                  __ptext12 1010  
                                __ptext13 11AE                                  __ptext14 121E  
                                __ptext15 113E                                  __ptext16 11DC  
                                __ptext17 1116                                  __ptext18 117C  
                                __ptext19 11C6                                  isa$xinst 0000  
            _INT1_DefaultInterruptHandler 0000                                _INTCONbits 0FF2  
                  ??_INTERRUPT_Initialize 0003                   ?_PIN_MANAGER_Initialize 0001  
                        ??_ADC_Initialize 0001                         ??_LCD_PulseEnable 0004  
                __end_of_CLOCK_Initialize 1254                       LCD_Send@high_nibble 0007  
        __end_of_INT1_SetInterruptHandler 1240            __end_of_PIN_MANAGER_Initialize 1116  
